import tensorflow as tf
import pandas as pd
import numpy as np


def 만성간염():
    
    병확률 = pd.read_csv('만성간염.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())


def 골수염():
    
    병확률 = pd.read_csv('골수염.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())



def 고혈압():
    
    병확률 = pd.read_csv('고혈압.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())



def 백반증():
    
    병확률 = pd.read_csv('백반증.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())



def 소아마비():
    
    병확률 = pd.read_csv('소아마비.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())



def 수두증():
    
    병확률 = pd.read_csv('수두증.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())



def 알츠하이머():
    
    병확률 = pd.read_csv('알츠하이머.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())




def 저체온증():
    
    병확률 = pd.read_csv('저체온증.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())



def 치매():
    
    병확률 = pd.read_csv('치매.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())



def 탈모증():
    
    병확률 = pd.read_csv('탈모증.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())



def 폐경():
    
    병확률 = pd.read_csv('폐경.txt',sep = "\t")
    print(병확률.columns)
    병확률.head()


    독립 = 병확률[['성별' , '나이', '계절(기온)']]
    종속 = 병확률[['확률']]
    print(독립.shape, 종속.shape)


    X = tf.keras.layers.Input(shape=[3])
    Y = tf.keras.layers.Dense(1)(X)
    model = tf.keras.models.Model(X, Y)
    model.compile(loss='mse')


    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)
    model.fit(독립, 종속, epochs=1000, verbose=0)


    print(model.predict([[0,25,24.8]]))

    print(종속[0:5])
 
    print(model.get_weights())


    
                     
name = input('병코드을 입력해주세요: ')


if name == '만성간염':
    만성간염()

elif name == '고혈압':
    고혈압()
    
elif name == '골수염':
    골수염()
    
elif name == '백반증':
    백반증()
    
elif name == '소아마비':
    소아마비()
    
elif name == '알츠하이머':
    알츠하이머()
    
elif name == '수두증':
    수두증()
    
elif name == '저체온증':
    저체온증()

elif name == '저체온증':
    치매()

elif name == '저체온증':
    탈모증()

elif name == '저체온증':
    폐경()





    
